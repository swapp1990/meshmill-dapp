import React, { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { SERVER_URL } from "../config";

export default function Home({ isConnected, users }) {
  React.useEffect(() => {
    callMongo();
    initTestData();
  }, []);

  //test data
  const [isLogged, setIsLogged] = useState(false);
  const [username, setUsername] = useState();
  const [sessionId, setIsSessionId] = useState("");
  const [unrealAssets, setUnrealAssets] = useState([]);

  function callMongo() {
    console.log({ SERVER_URL });
    console.log("callMongo ", users);
  }

  function initTestData() {
    console.log("initTestData");
    const testEntry = {
      imgUrl: "https://static-cdn.jtvnw.net/ttv-boxart/516575-285x380.jpg",
      title: "VALORANT",
    };
    const entries = [];
    for (let i = 0; i < 3; i++) {
      entries.push(testEntry);
    }
    setUnrealAssets(entries);
  }
  //   React.useEffect(() => {
  //     console.log(process.env.NEXT_PUBLIC_API_URL);
  //     fetch(process.env.NEXT_PUBLIC_API_URL + "/api/status")
  //       .then((res) => {
  //         return res.json();
  //       })
  //       .then((data) => {
  //         console.log(data);
  //       });
  //     const requestOptions = {
  //       method: "POST",
  //       headers: { "Content-Type": "application/json" },
  //       body: JSON.stringify({ title: "React POST Request Example" }),
  //     };
  //     fetch(process.env.NEXT_PUBLIC_API_URL + "/api/hello", requestOptions)
  //       .then((response) => response.json())
  //       .then((data) => console.log("POST ", data));
  //   });
  const loginMetamask = async () => {
    setIsLogged(true);
    let sessionId = Date.now();
    setIsSessionId(sessionId);
    try {
      let user = {
        name: "oldmonk.eth",
        sessionId: sessionId,
      };
      let response = await fetch(`${SERVER_URL}/api/users`, {
        method: "POST",
        body: JSON.stringify(user),
      });
      let data = await response.json();
      console.log(data.payload);
      setUsername(data.payload.name);
    } catch (error) {
      console.log(error);
    }
  };
  const mintAsset = () => {};

  return (
    <div className={styles.container}>
      <Head>
        <title>MeshMill dApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css"
        />
      </Head>

      <main className={styles.main}>
        <div class="w-full text-gray-700 bg-white h-16 fixed top-0 animated z-40">
          <div class="flex flex-col max-w-screen-xl px-2 mx-auto md:items-center md:justify-between md:flex-row">
            <div class="p-4 flex flex-row items-center justify-between">
              <a
                href=""
                class="tracking-widest rounded-lg focus:outline-none focus:shadow-outline"
              >
                <svg
                  class="w-8 h-8 text-purple-600"
                  width="54"
                  height="54"
                  viewBox="0 0 54 54"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <title>TailwindCSS</title>
                  <path
                    fill="currentColor"
                    d="M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z"
                  ></path>
                </svg>
              </a>
            </div>
            <nav class="flex-col flex-grow pb-4 md:pb-0 hidden md:flex md:justify-end md:flex-row bg-white">
              <a
                class="flex items-center px-3 py-1 mt-2 text-lg font-semibold text-primary rounded-lg md:mt-0 hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline"
                href="#"
              >
                <i class="fas fa-envelope"></i>
              </a>
              <button class="flex flex-row items-center w-full px-3 py-1 mt-2 text-sm font-semibold text-left bg-transparent rounded-lg md:w-auto md:mt-0 md:ml-2 hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline">
                <span class="text-lg text-primary">
                  <i class="fas fa-bell"></i>
                </span>
              </button>
              <button class="flex flex-row items-center w-full px-1 py-1 mt-2 text-sm font-semibold text-left bg-transparent rounded-full md:w-auto md:mt-0 md:ml-2 hover:text-gray-900 focus:text-gray-900 hover:bg-gray-200 focus:bg-gray-200 focus:outline-none focus:shadow-outline">
                <img
                  src="https://randomuser.me/api/portraits/men/12.jpg"
                  class="w-auto h-6 rounded-full"
                  alt=""
                />
                <div class="ml-2">{username}</div>
              </button>
            </nav>
          </div>
        </div>
        <div className="text-4xl p-5 text-red-400">MeshMill</div>
        {!isLogged && (
          <button
            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            onClick={loginMetamask}
          >
            Login with Metamask
          </button>
        )}

        {isLogged && (
          <div className="">
            <div className="rounded-xl shadow-md p-5 border border-gray-50 bg-white flex flex-col justify-center items-center">
              <p className="text-gray-700 text-lg">Session ID: {sessionId}</p>
              {/* <div className="w-full bg-gray-200 rounded-full h-1.5 mt-4">
                <div className="bg-blue-500 h-1.5 rounded-full w-0.5"></div>
              </div> */}
              <p className="text-blue-500 text-xs mt-4">
                Paste this Session ID into your Game Engine or Game
              </p>
            </div>
            <div className="rounded-xl shadow-md p-5 border-gray-50 mt-4 bg-slate-600 flex flex-col justify-center items-center">
              <a href="#" class="bg-purple-500">
                <img
                  src="/images/plane1.jpg"
                  class="h-64 hover:translate-x-1 hover:-translate-y-1 delay-50 duration-100"
                />
              </a>
              <a
                href="#"
                class="hover:text-purple-500 text-gray-100 font-semibold"
              >
                Plane 1
              </a>
              <button
                class="mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
                onClick={mintAsset}
              >
                Mint Asset
              </button>
            </div>
            <div className="rounded-xl shadow-md p-5 border-gray-50 bg-slate-300 mt-4">
              <h1 class="text-4xl sm:text-4xl md:text-4xl font-bold text-red-400 mb-5">
                Unreal Assets
              </h1>
              <div class="grid grid-cols-6 gap-2 px-16">
                {unrealAssets.map((e) => (
                  <div class="flex flex-col gap-1">
                    <a href="" class="bg-purple-500">
                      <img
                        src={e.imgUrl}
                        class="hover:translate-x-1 hover:-translate-y-1 delay-50 duration-100"
                      />
                    </a>
                    <a
                      href="#"
                      class="hover:text-purple-500 text-gray-800 font-semibold"
                    >
                      {e.title}
                    </a>
                    <a
                      href="#"
                      class="hover:text-purple-500 text-sm text-gray-400 -mt-1"
                    >
                      78.4K viewers
                    </a>
                    <div class="flex flex-row flex-wrap gap-2">
                      <a
                        href="#"
                        class="hover:bg-gray-600 text-gray-300 text-xs font-semibold bg-gray-700 px-2 py-1 rounded-full"
                      >
                        Shooter
                      </a>
                      <a
                        href="#"
                        class="hover:bg-gray-600 text-gray-300 text-xs font-semibold bg-gray-700 px-2 py-1 rounded-full"
                      >
                        FPS
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
            <div className="rounded-xl shadow-md p-5 border-gray-50 bg-slate-300 mt-4">
              <h1 class="text-4xl sm:text-4xl md:text-4xl font-bold text-red-400 mb-5">
                In-Game NFTs
              </h1>
              <div class="grid grid-cols-6 gap-2 px-16">
                {unrealAssets.map((e, i) => (
                  <div class="flex flex-col gap-1" key={i}>
                    <a href="" class="bg-purple-500">
                      <img
                        src={e.imgUrl}
                        class="hover:translate-x-1 hover:-translate-y-1 delay-50 duration-100"
                      />
                    </a>
                    <a
                      href="#"
                      class="hover:text-purple-500 text-gray-800 font-semibold"
                    >
                      {e.title}
                    </a>
                    <a
                      href="#"
                      class="hover:text-purple-500 text-sm text-gray-400 -mt-1"
                    >
                      78.4K viewers
                    </a>
                    <div class="flex flex-row flex-wrap gap-2">
                      <a
                        href="#"
                        class="hover:bg-gray-600 text-gray-300 text-xs font-semibold bg-gray-700 px-2 py-1 rounded-full"
                      >
                        Shooter
                      </a>
                      <a
                        href="#"
                        class="hover:bg-gray-600 text-gray-300 text-xs font-semibold bg-gray-700 px-2 py-1 rounded-full"
                      >
                        FPS
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export async function getServerSideProps(context) {
  try {
    let response = await fetch(`${SERVER_URL}/api/users`);
    let data = await response.json();
    return {
      props: { isConnected: true, users: data["message"] },
    };
  } catch (e) {
    console.error(e);
    return {
      props: { isConnected: false },
    };
  }
}
